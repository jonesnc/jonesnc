<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Home on Nathan Jones&#39; blog</title>
    <link>http://localhost:1313/jonesnc/</link>
    <description>Recent content in Home on Nathan Jones&#39; blog</description>
    <generator>Hugo</generator>
    <language>en-US</language>
    <copyright>Copyright Â© 2025, jonesnc.</copyright>
    <lastBuildDate>Tue, 11 Mar 2025 10:11:23 -0600</lastBuildDate>
    <atom:link href="http://localhost:1313/jonesnc/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>How to Specify a Structured Output Response Format in Geminis Batch Predictions API</title>
      <link>http://localhost:1313/jonesnc/how-to-specify-a-structured-output-response-format-in-geminis-batch-predictions-api/</link>
      <pubDate>Tue, 11 Mar 2025 10:11:23 -0600</pubDate>
      <guid>http://localhost:1313/jonesnc/how-to-specify-a-structured-output-response-format-in-geminis-batch-predictions-api/</guid>
      <description>&lt;p&gt;In my &lt;a href=&#34;http://localhost:1313/jonesnc/how-to-specify-a-structured-output-response-format-in-openais-batch-api/&#34;&gt;previous post&lt;/a&gt;, I described how to use Structured Output with OpenAI&amp;rsquo;s Batch API.&lt;/p&gt;&#xA;&lt;p&gt;In this post, my goal is to document the same thing for Google&amp;rsquo;s Gemini models. The goal is to instruct Google&amp;rsquo;s Batch Predictions APIs to structure its text responses as valid JSON data that adheres to a given JSON Schema or Pdyantic model. I couldn&amp;rsquo;t find this particular configuration anywhere in Google documentation, so I wanted to share it. I recommend reading my &lt;a href=&#34;http://localhost:1313/jonesnc/how-to-specify-a-structured-output-response-format-in-openais-batch-api/&#34;&gt;previous post&lt;/a&gt; first if you haven&amp;rsquo;t already, as that covers a lot of the basic concepts related to these APIs.&lt;/p&gt;</description>
    </item>
    <item>
      <title>How to specify a Structured Output Response Format in OpenAI&#39;s Batch API</title>
      <link>http://localhost:1313/jonesnc/how-to-specify-a-structured-output-response-format-in-openais-batch-api/</link>
      <pubDate>Mon, 13 Jan 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/jonesnc/how-to-specify-a-structured-output-response-format-in-openais-batch-api/</guid>
      <description>&lt;h2 id=&#34;problem&#34;&gt;Problem&lt;/h2&gt;&#xA;&lt;p&gt;I recently started using OpenAI&amp;rsquo;s &lt;a href=&#34;https://platform.openai.com/docs/guides/batch&#34;&gt;Batch API&lt;/a&gt; to send multiple jobs to OpenAI, and for the most part it&amp;rsquo;s been a pretty smooth experience. However, it was difficult to figure out how to get the batch results to adhere to a consistent data structure. While OpenAI has provided a way to &lt;a href=&#34;https://platform.openai.com/docs/guides/structured-outputs&#34;&gt;ensure a response adheres to a JSON Schema for a single job response&lt;/a&gt;, the documentation for the Batch API doesn&amp;rsquo;t explain how to get Structured Output from a batch job&amp;rsquo;s series of responses.&lt;/p&gt;</description>
    </item>
    <item>
      <title>How to fix ORA-00932 error when calling QuerySet.bulk_update on a TextField</title>
      <link>http://localhost:1313/jonesnc/how-to-fix-ora-00932-error-when-calling-queryset.bulk_update-on-a-textfield/</link>
      <pubDate>Sun, 26 May 2024 14:22:18 -0600</pubDate>
      <guid>http://localhost:1313/jonesnc/how-to-fix-ora-00932-error-when-calling-queryset.bulk_update-on-a-textfield/</guid>
      <description>&lt;h2 id=&#34;intro&#34;&gt;Intro&lt;/h2&gt;&#xA;&lt;p&gt;Django&amp;rsquo;s &lt;a href=&#34;https://docs.djangoproject.com/en/4.2/ref/models/querysets/#bulk-update&#34;&gt;&lt;code&gt;bulk_update&lt;/code&gt;&lt;/a&gt; QuerySet method allows you to update multiple objects in a single SQL &lt;code&gt;UPDATE&lt;/code&gt; statement. I recently ran into an issue calling &lt;code&gt;bulk_update&lt;/code&gt; against an Oracle database, and in this post, I will share the solution I used to fix it.&lt;/p&gt;&#xA;&lt;p&gt;The Oracle error that we&amp;rsquo;ll be fixing is this:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#ebdbb2;background-color:#282828;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ORA&lt;span style=&#34;color:#fe8019&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#d3869b&#34;&gt;00932&lt;/span&gt;: inconsistent datatypes: expected &lt;span style=&#34;color:#fabd2f&#34;&gt;CHAR&lt;/span&gt; got &lt;span style=&#34;color:#fe8019&#34;&gt;CLOB&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;background&#34;&gt;Background&lt;/h2&gt;&#xA;&lt;p&gt;First, let&amp;rsquo;s start with an example Django model &lt;code&gt;Throwaway&lt;/code&gt; with a single &lt;code&gt;TextField&lt;/code&gt; named &lt;code&gt;my_field&lt;/code&gt;:&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
